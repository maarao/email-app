services:
  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./backend/postgres-data:/var/lib/postgresql/data
    ports:
      - "${PGPORT}:${PGPORT}"

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    # ports:
    #   - "${BACKEND_PORT}:${BACKEND_PORT}"
    volumes:
      - ./backend:/app
      - /app/.venv  # Preserve virtual environment
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - BACKEND_PORT=${BACKEND_PORT}
    restart: unless-stopped
    develop:
      watch:
        - action: rebuild
          path: ./backend # workaround for reloading production-served fastapi

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    volumes:
      - ./frontend:/app
      - /app/node_modules  # Preserve node_modules
    environment:
      - NODE_ENV=development
      - FRONTEND_PORT=${FRONTEND_PORT}
      - BACKEND_URL=${BACKEND_URL}
      - BACKEND_PORT=${BACKEND_PORT}
    restart: unless-stopped
    develop:
      watch:
        - action: rebuild
          path: ./frontend/package.json
